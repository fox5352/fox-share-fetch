{"version":3,"file":"main.js","sources":["../src/main.ts"],"sourcesContent":["export type Methods = \"GET\" | \"POST\" | \"UPDATE\" | \"DELETE\";\n\n// Encode raw binary data (ArrayBuffer or Uint8Array) to Base64 string\nexport function encodeToBase64(data: ArrayBuffer | Uint8Array): string {\n\tconst buffer = data instanceof ArrayBuffer ? new Uint8Array(data) : data;\n\tlet binary = '';\n\tbuffer.forEach(byte => binary += String.fromCharCode(byte));\n\treturn btoa(binary);\n}\n\n// Decode Base64 string to a Uint8Array (raw binary buffer)\nexport function base64ToBuffer(base64: string): Uint8Array {\n\tconst binary = atob(base64);\n\tconst buffer = new Uint8Array(binary.length);\n\tfor (let i = 0; i < binary.length; i++) {\n\t\tbuffer[i] = binary.charCodeAt(i);\n\t}\n\treturn buffer;\n}\n\n\nexport type RouteData = {\n\tpath: string,\n\tname: string,\n\tdescription: string,\n\tmethods: Methods[]\n}\n\nexport type Routes = {\n\troutes: RouteData[]\n}\n\nexport async function heathCheck(url: string): Promise<boolean> {\n\ttry {\n\t\tconst res = await fetch(`${url}/`, {\n\t\t\tmethod: \"GET\"\n\t\t});\n\n\t\tif (res.ok) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(`Failed heath check: ${error}`);\n\t\treturn false;\n\t}\n}\n\n\nexport async function getindex(url: string): Promise<Routes | null> {\n\ttry {\n\t\tconst res = await fetch(`${url}/`, {\n\t\t\tmethod: \"GET\",\n\t\t})\n\n\t\tif (!res.ok) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn await res.json();\n\t} catch (error) {\n\t\tconsole.error(\"Failed to get index of server\");\n\t\treturn null\n\t}\n}\n"],"names":[],"mappings":";;AAEA;AACM,SAAU,cAAc,CAAC,IAA8B,EAAA;AAC5D,IAAA,MAAM,MAAM,GAAG,IAAI,YAAY,WAAW,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI;IACxE,IAAI,MAAM,GAAG,EAAE;AACf,IAAA,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAC3D,IAAA,OAAO,IAAI,CAAC,MAAM,CAAC;AACpB;AAEA;AACM,SAAU,cAAc,CAAC,MAAc,EAAA;AAC5C,IAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3B,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC;AAC5C,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACvC,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IACjC;AACA,IAAA,OAAO,MAAM;AACd;AAcO,eAAe,UAAU,CAAC,GAAW,EAAA;AAC3C,IAAA,IAAI;QACH,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,CAAA,EAAG,GAAG,GAAG,EAAE;AAClC,YAAA,MAAM,EAAE;AACR,SAAA,CAAC;AAEF,QAAA,IAAI,GAAG,CAAC,EAAE,EAAE;AACX,YAAA,OAAO,IAAI;QACZ;aAAO;AACN,YAAA,OAAO,IAAI;QACZ;IACD;IAAE,OAAO,KAAK,EAAE;AACf,QAAA,OAAO,CAAC,KAAK,CAAC,uBAAuB,KAAK,CAAA,CAAE,CAAC;AAC7C,QAAA,OAAO,KAAK;IACb;AACD;AAGO,eAAe,QAAQ,CAAC,GAAW,EAAA;AACzC,IAAA,IAAI;QACH,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,CAAA,EAAG,GAAG,GAAG,EAAE;AAClC,YAAA,MAAM,EAAE,KAAK;AACb,SAAA,CAAC;AAEF,QAAA,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE;AACZ,YAAA,OAAO,IAAI;QACZ;AAEA,QAAA,OAAO,MAAM,GAAG,CAAC,IAAI,EAAE;IACxB;IAAE,OAAO,KAAK,EAAE;AACf,QAAA,OAAO,CAAC,KAAK,CAAC,+BAA+B,CAAC;AAC9C,QAAA,OAAO,IAAI;IACZ;AACD;;;;;;;"}